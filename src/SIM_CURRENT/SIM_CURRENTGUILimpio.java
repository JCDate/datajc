/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package SIM_CURRENT;

import OrdenesSolicitadas.OrdenesSolicitadasGUI;
import ComponentesRep.ComponentesRepGUI;
import Modelos.SIM_CURRENT_M;
import Modelos.Usuarios;
import Servicios.Conexion;
import Servicios.SIMCURRENT_servicio;
import java.awt.Image;
import java.awt.Toolkit;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;


public class SIM_CURRENTGUILimpio extends javax.swing.JFrame {
    private final SIMCURRENT_servicio simcurrent_servicio = new SIMCURRENT_servicio();
    private List<SIM_CURRENT_M> simcurrent;
    Conexion cc = new Conexion();
    Connection cn;
    Usuarios mod;
    
   
    public SIM_CURRENTGUILimpio() throws SQLException, ClassNotFoundException  {
        this.cn = Conexion.obtener();
        initComponents();
        this.setResizable(false);
        this.setDefaultCloseOperation(0);
        this.SIM_CURRENTGUI(); 

  
    }
    
    public SIM_CURRENTGUILimpio(Usuarios mod) throws SQLException, ClassNotFoundException{
        this.cn = Conexion.obtener();
        initComponents();
        this.mod = mod;
        this.setResizable(false);
        this.setDefaultCloseOperation(0);
        this.SIM_CURRENTGUI();

    }
    
      @Override
    public Image getIconImage() {
        Image retValue = Toolkit.getDefaultToolkit().
              getImage(ClassLoader.getSystemResource("jc/img/jc.png"));

        return retValue;
    }
     
    private void SIM_CURRENTGUI()  {
       try{
            this.simcurrent = this.simcurrent_servicio.recuperarTodas(Conexion.obtener());
            DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
            dtm.setRowCount(0);
            for(int i = 0; i < this.simcurrent.size(); i++){
                dtm.addRow(new Object[]{
                    this.simcurrent.get(i).getFechaRecibida(),
                    this.simcurrent.get(i).getConsignatario(),
                    this.simcurrent.get(i).getItem_cliente(),
                    this.simcurrent.get(i).getOrden(),
                    this.simcurrent.get(i).getFechaVencida(),
                    this.simcurrent.get(i).getCantidad_reque()
                });
            }
        }catch(SQLException ex){
            System.out.println(ex.getMessage());
            JOptionPane.showMessageDialog(this, "Ha surgido un error y no se han podido recuperar los registros");
        }catch(ClassNotFoundException ex){
            System.out.println(ex);
            JOptionPane.showMessageDialog(this, "Ha surgido un error y no se han podido recuperar los registros");
        }
    }
    /**to
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setIconImage(getIconImage());
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Wide Latin", 1, 24)); // NOI18N
        jLabel2.setText("SIM CURRENT");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 50, 350, 50));

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jc/img/limpiar.png"))); // NOI18N
        jButton1.setText("LIMPIAR");
        jButton1.setEnabled(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 230, 150, 40));

        jButton3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jc/img/cancelar.png"))); // NOI18N
        jButton3.setText("CERRAR");
        jButton3.setToolTipText("");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 589, 120, -1));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "FECHA", "CONSIGNATARIO", "COMPONENTE", "ORDEN", "FECHA DE DESPACHO ", "CANTIDAD REQUERIDA"
            }
        ));
        jScrollPane2.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(120);
            jTable1.getColumnModel().getColumn(1).setPreferredWidth(100);
            jTable1.getColumnModel().getColumn(2).setPreferredWidth(150);
            jTable1.getColumnModel().getColumn(3).setPreferredWidth(150);
            jTable1.getColumnModel().getColumn(4).setPreferredWidth(100);
            jTable1.getColumnModel().getColumn(5).setPreferredWidth(150);
        }

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 160, 480, 460));

        jButton2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jc/img/comparar.png"))); // NOI18N
        jButton2.setText("COMPARAR");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 300, 150, 40));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jc/img/jcLogo.png"))); // NOI18N
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        jPanel1.setBackground(new java.awt.Color(135, 206, 235));
        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 710, 640));

        pack();
    }// </editor-fold>//GEN-END:initComponents

           
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed

        dispose();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        
         try{
            // eliminar los ceros de mas 
            PreparedStatement pst = cn.prepareStatement("UPDATE sim_current SET item_cliente =(if(item_cliente LIKE '1%' OR item_cliente LIKE '2%' AND CHAR_LENGTH(item_cliente)>6 , SUBSTRING(item_cliente, 1, CHAR_LENGTH(item_cliente) - 2), item_cliente) )");
            pst.executeUpdate();

            //Comparar componente de analisis de atrasos y entregados con las nuevas ordenes
            PreparedStatement pst1 = cn.prepareStatement("INSERT INTO nuevasordenes (nuevasordenes.orden,nuevasordenes.componente, nuevasordenes.fechaV, nuevasordenes.cantidadR) SELECT sim_current.orden ,sim_current.item_cliente, sim_current.fechaVencida,sim_current.cantidad_reque FROM sim_current WHERE NOT EXISTS ( SELECT analisisatrasos.orden FROM analisisatrasos, entregados WHERE analisisatrasos.orden = sim_current.orden OR entregados.orden= sim_current.orden)");    
            pst1.executeUpdate();

            PreparedStatement pst7 = cn.prepareStatement("UPDATE nuevasordenes SET ordengenerada ='0'");
            pst7.executeUpdate();

            //Comparar componentes 
            PreparedStatement pst4 = cn.prepareStatement("INSERT INTO comparacionordenes (comparacionordenes.orden, comparacionordenes.componente) SELECT analisisatrasos.orden,analisisatrasos.item_cliente FROM nuevasordenes, analisisatrasos WHERE analisisatrasos.item_cliente=nuevasordenes.componente");    
            pst4.executeUpdate();

            PreparedStatement pst4_1 = cn.prepareStatement("INSERT INTO comparacionordenes (comparacionordenes.orden, comparacionordenes.componente) SELECT nuevasordenes.orden,nuevasordenes.componente FROM nuevasordenes, analisisatrasos WHERE analisisatrasos.item_cliente=nuevasordenes.componente");    
            pst4_1.executeUpdate();

            //Insertar datos a analisis de atrasos
            PreparedStatement pst2 = cn.prepareStatement("INSERT INTO analisisatrasos (analisisatrasos.fechaRecibida,analisisatrasos.fechaVencida, analisisatrasos.orden, analisisatrasos.cantidad_reque, analisisatrasos.consignatario, analisisatrasos.item_cliente) SELECT sim_current.fechaRecibida, sim_current.fechaVencida, sim_current.orden, sim_current.cantidad_reque, sim_current.consignatario, sim_current.item_cliente FROM sim_current WHERE NOT EXISTS ( SELECT analisisatrasos.orden FROM analisisatrasos, entregados WHERE analisisatrasos.orden = sim_current.orden OR entregados.orden= sim_current.orden )");    
            int resultado = pst2.executeUpdate();

            //Insertar datos a orden actualizada
            //FECHA DE VENCIMIENTO
            PreparedStatement pstFV = cn.prepareStatement("INSERT INTO ordenact (ordenact.orden, ordenact.componente, ordenact.fechaVencida, ordenact.cantidad_reque, ordenact.actualizo) SELECT sim_current.orden, sim_current.item_cliente, sim_current.fechaVencida, sim_current.cantidad_reque, 'FECHA V.' FROM sim_current, analisisatrasos WHERE sim_current.orden = analisisatrasos.orden AND sim_current.fechaVencida!= analisisatrasos.fechaVencida");    
            pstFV.executeUpdate();

            //CANTIDAD REQUERIDA
            PreparedStatement pstCR = cn.prepareStatement("INSERT INTO ordenact (ordenact.orden, ordenact.componente, ordenact.fechaVencida, ordenact.cantidad_reque, ordenact.actualizo) SELECT sim_current.orden, sim_current.item_cliente, sim_current.fechaVencida, sim_current.cantidad_reque, 'CANT. SOLICITADA' FROM sim_current, analisisatrasos WHERE sim_current.orden = analisisatrasos.orden AND sim_current.cantidad_reque != analisisatrasos.cantidad_reque");    
            pstCR.executeUpdate();

            //CANTIDAD REQUERIDA Y FECHA DE VANCIMIENTO
            PreparedStatement pst8 = cn.prepareStatement("INSERT INTO ordenact (ordenact.orden, ordenact.componente, ordenact.fechaVencida, ordenact.cantidad_reque, ordenact.actualizo) SELECT sim_current.orden, sim_current.item_cliente, sim_current.fechaVencida, sim_current.cantidad_reque, 'FECHA V. Y CANT. SOLICITADA' FROM sim_current, analisisatrasos WHERE sim_current.orden = analisisatrasos.orden AND sim_current.cantidad_reque != analisisatrasos.cantidad_reque AND sim_current.fechaVencida!= analisisatrasos.fechaVencida");    
            pst8.executeUpdate();

            //Actualizar fecha vencida del analisis de atrasos
            PreparedStatement pst9 = cn.prepareStatement("UPDATE analisisatrasos JOIN ordenact ON ordenact.orden = analisisatrasos.orden SET analisisatrasos.fechaVencida = ordenact.fechaVencida");    
            pst9.executeUpdate();

            //Actualizar cantidad requerida del analisis de atrasos
            PreparedStatement pst10 = cn.prepareStatement("UPDATE analisisatrasos JOIN ordenact ON ordenact.orden = analisisatrasos.orden SET analisisatrasos.cantidad_reque = ordenact.cantidad_reque");    
            pst10.executeUpdate();

             //Insertar datos a Posibles ordenenes canceladas
            PreparedStatement pst11 = cn.prepareStatement("INSERT INTO posiordcancelacion (posiordcancelacion.orden, posiordcancelacion.componente) SELECT analisisatrasos.orden, analisisatrasos.item_cliente FROM analisisatrasos WHERE NOT EXISTS ( SELECT sim_current.orden FROM sim_current WHERE sim_current.orden = analisisatrasos.orden OR analisisatrasos.factura !='' )");    
            pst11.executeUpdate();

            if(resultado>0){
                JOptionPane.showMessageDialog(null,resultado+ " nuevas ordenenes");

                //Cantidad_reque es igual que piezasEntregar
                PreparedStatement pst3 = cn.prepareStatement("UPDATE analisisatrasos, nuevasordenes SET piezasEntregar= cantidad_reque WHERE analisisatrasos.orden=nuevasordenes.orden");
                pst3.executeUpdate();

                //Eliminar datos repetidos de la tabla comparacionordenes
                PreparedStatement pst5 = cn.prepareStatement("Delete N1 FROM comparacionordenes N1, comparacionordenes N2 WHERE N1.componente = N2.componente And N1.orden = N2.orden And N1.id>N2.id");    
                pst5.executeUpdate();
                
                //LOTE ECONOMICO SI O NO
                PreparedStatement pst6 = cn.prepareStatement("UPDATE nuevasordenes, loteeconomico SET loteeconomico='SI' WHERE nuevasordenes.componente= loteeconomico.componente");
                pst6.executeUpdate();

                ComponentesRepGUI vista2 = new ComponentesRepGUI();
                vista2.setVisible(true);
                vista2.setLocationRelativeTo(null);

            }else{
                JOptionPane.showMessageDialog(null, "Sin nuevas ordenes");
            }

            SIM_CURRENTGUILimpio.this.dispose();
            OrdenesSolicitadasGUI vista = new OrdenesSolicitadasGUI(mod);
            vista.setVisible(true);
            vista.setLocationRelativeTo(null);

            //Eliminar la base de datos sim surrent
            PreparedStatement pst6 = cn.prepareStatement("DELETE FROM sim_current WHERE 1");    
            pst6.executeUpdate();
         
        }catch(Exception e){
            JOptionPane.showMessageDialog(this, "Error."); 
        }
    }//GEN-LAST:event_jButton2ActionPerformed
 

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SIM_CURRENTGUILimpio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SIM_CURRENTGUILimpio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SIM_CURRENTGUILimpio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SIM_CURRENTGUILimpio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new SIM_CURRENTGUILimpio().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(SIM_CURRENTGUILimpio.class.getName()).log(Level.SEVERE, null, ex);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(SIM_CURRENTGUILimpio.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables

}